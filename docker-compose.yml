version: '3.8'

services:
  # Redis Stack
  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack-rag
    restart: unless-stopped
    ports:
      - "6379:6379"  # For Redis
      - "8001:8001"  # For RedisInsight bundled with redis-stack
    volumes:
      - redis_stack_data:/data
    networks:
      - rag_network
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6379", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


  # LGTM Stack Components
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    networks:
      - monitoring_network
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./infra/loki/:/etc/loki/
      - loki_data:/loki
    networks:
      - monitoring_network
    restart: unless-stopped

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: -config.file=/etc/tempo/tempo-local.yaml
    ports:
      - "3200:3200"  # tempo
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
    volumes:
      - ./infra/tempo/:/etc/tempo/
      - tempo_data:/tmp/tempo
    networks:
      - monitoring_network
    restart: unless-stopped
    user: "0:0"  # Run as root user to avoid permission issues

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring_network
      - rag_network  # Connect to both networks to access Redis metrics
    depends_on:
      - prometheus
      - loki
      - tempo
    restart: unless-stopped

volumes:
  # Redis volumes
  redis_stack_data:
    driver: local
  # LGTM stack volumes
  prometheus_data:
    driver: local
  loki_data:
    driver: local
  tempo_data:
    driver: local
  grafana_data:
    driver: local

networks:
  rag_network:
    driver: bridge
  monitoring_network:
    driver: bridge
